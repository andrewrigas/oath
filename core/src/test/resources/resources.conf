token {
  algorithm {
    name = "HS256"
    sign-key {
      secret-key = "secret"
      //    For assymetric key provided by pem file path
      private-key-pem-path = "secret/private-key.pem"
    }
    verify-key {
      secret-key = ${token.algorithm.sign.secret-key}
//          For assymetric key provided by pem file path
      public-key-pem-path = "secret/public-key.pwm"
    }
  }
  issuer {
    registered {
      issuer-claim = "issuer"
      subject-claim = "subject"
      audience-claim = "audience"
      include-jwt-id-claim = false
      include-issued-at-claim = true
      expires-at-offset = 1 day
      not-before-offset = 1 minute
    }
  }
  verifier {
    provided-with {
      issuer-claim = ${token.claims.registered.issuer}
      subject-claim = ${token.claims.registered.subject}
      audience-claim = ${token.claims.registered.audience}
      presence-claims = []
      null-claims = []
    }
    leeway-window {
      leeway = 5 min
      issued-at = 4 min
      expires-at = 3 min
      not-before = 2 min
    }
  }
}
